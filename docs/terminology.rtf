{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9460\viewh9300\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs28 \cf0 GLU terminology\

\b0\fs24 \cf0 \

\i\b \cf0 Agent\

\i0\b0 \cf0 The GLU agent is an active process that needs to run on every host where applications need to be deployed\
\

\i\b \cf0 Closure\

\i0\b0 \cf0 In a GLU script, a closure is a groovy closure which is essentially a piece of groovy/java code (between curly braces) assigned to an attribute. (TODO: link to groovy closure wiki)\
\

\i\b \cf0 Console\

\i0\b0 \cf0 The webapp/REST api built on top of ZooKeeper which is the orchestrator of the system.\
\

\i\b \cf0 Fabric\

\i0\b0 \cf0 A fabric defines a group of agents.\
\

\i\b \cf0 GLU script\

\i0\b0 \cf0 A GLU script is a set of instructions backed by a state machine that the agent knows how to run.\
\

\i\b \cf0 Metadata\

\i0\b0 \cf0 Metadata in the context of GLU represents a map that can be represented as a json object.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f1 \cf0 def goodMetadata = \
[\
  p1: 'v1',\
  p2: [1, 2, 3], // array\
  p3: [p31: 'v31'] // another nested map\
]\
\
// bad because the value is a java object\
def badMetadata =\
[\
  color: java.awt.Color.BLACK\
]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0 \cf0 \

\i\b \cf0 Mount Point\

\i0\b0 \cf0 The unique key on which a GLU scripts get 'mounted' on a given agent. It is a String which has a path like syntax (must start with a '/'). Example: /a/b/c\
\

\i\b \cf0 ZooKeeper\

\i0\b0 \cf0 View more information about ZooKeeper: {\field{\*\fldinst{HYPERLINK "http://hadoop.apache.org/zookeeper/"}}{\fldrslt http://hadoop.apache.org/zookeeper/}}}