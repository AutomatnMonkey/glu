/*
 * Copyright 2010-2010 LinkedIn, Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

apply plugin: 'org.linkedin.cmdline'
apply plugin: 'org.linkedin.release'

configurations {
  jetty
}

dependencies {
  jetty spec.external.jettyPackage
}

def jettyDistribution = "jetty-distribution-${spec.versions.jetty}"

def consoleWebappProject = evaluationDependsOn(':console:org.linkedin.glu.console-webapp')

String consoleWebapp = "${consoleWebappProject.name}-${version}"

cmdline {
  folders = []
  
  dependsOn = [
    ':console:org.linkedin.glu.console-webapp:war'
  ]

  replacementTokens = [
    'jetty.distribution': jettyDistribution,
    'console.webapp': consoleWebapp
  ]

  // licenses
  resources << [ fileTree(dir: rootDir, includes: ['*.txt', '*.md', '*.html']) ]
}

File basePackage = project.convention.plugins.cmdline.assemblePackageFile
File jettyRoot = new File(basePackage, jettyDistribution)

/********************************************************
 * task: package-assemble
 * customizing package-assemble task to include jetty
 ********************************************************/
project.'package-assemble'.doFirst {
  // fetch/untar jetty distribution 
  ant.untar(src: configurations.jetty.resolve().toList()[0],
            dest: basePackage,
            compression: 'gzip')

  // remove the webapps and contexts folders
  project.delete(new File(jettyRoot, "webapps"))
  project.delete(new File(jettyRoot, "contexts"))

  // unwar the webapp
  def webappDir = project.mkdir(new File(basePackage, "${consoleWebapp}"))
  ant.unwar(src: consoleWebappProject.tasks.getByPath('package-war').artifactFile, dest: webappDir)
}

/********************************************************
 * task: package-assemble
 * copy the context files in jetty distribution
 ********************************************************/
project.'package-assemble'.doLast {
  copy {
    from fileTree(dir: new File(basePackage, "conf"), includes: ["*-jetty-context.xml"])
    into new File(jettyRoot, 'contexts')
  }
}